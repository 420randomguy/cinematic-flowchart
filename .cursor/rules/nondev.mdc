---
description: 
globs: 
alwaysApply: true
---
# Next.js Frontend Rules

## Data Flow vs Rendering
- DO NOT OVERENGINEER MY CODE. CHECK IF SOLUION EXISTS AND PROPOSE TO USE THAT. SIMPLE SOLUTIONS ONLY
- React Flow should only handle data flow and absolute necessary elements of the app that cannot be rendered otherwise
- Visualmirror tech should handle ALL rendering of the app and only fall back to React if absolutely necessary

## Coding Style
- do not code at all unless user confirms your plan and tells you to 'code'
- do not introduce custom code ever. do not suggest logging unless absolutely necessary for debugging very specific issue with the user
- for any solved issue, remove related debugging
- no backend work in this app. dont ask for it, dont mention it
- do not introduce custom code or fix to a problem without first checking if codebase already has that function that just needs fixing
- Write all code in TypeScript
- Use simple, readable functions
- Keep components small and focused
- Use Tailwind CSS classes for styling, shadcn
- limit code to ~400 lines per file to keep things simple and modular and easy to change
- examine the codebase to find if the function exists before creating new, use existing functions first, if you need to create new file or new function, user must accept it and you need to explain why.
- write simple precise code, dont create complexity
- address only user specific code
- work only on a frontend in this project
- NEVER MAKE MOCK, MADE UP, TEST code that creates artifacts outside of codebase architecture

## Communication with the user
- warn user if a requested feature is a backend and don't code until user accepts the warning
- inform user about errors and problems in tldr, simple to read form without showing code snippets
- when suggesting and recommending next steps, break them down into Phases (eg. phase 1-> phase2 etc)
- after making changes to code requested by the user, report, suggest next steps, run dev for user to see changes. do not proceed to next phase unless user specifically says so.
